{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\Sanbercode\\\\ReactJS\\\\Final Project\\\\src\\\\Body.js\";\nimport React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\n\nclass Body extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.todoRef = React.createRef();\n\n    this._handleNewTodo = e => {\n      // let todoClone = [...this.state.todo];\n      let newTodo = this.todoRef.current.value;\n      this.props.addNewTodo(newTodo); // todoClone.push(newTodo);\n      // this.setState({todo: todoClone});\n\n      e.preventDefault();\n      this.todoRef.current.value = '';\n    };\n  }\n\n  render() {\n    const {\n      todos\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"App App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Todo List\"), React.createElement(\"form\", {\n      onSubmit: this._handleNewTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"New Todo \", React.createElement(\"input\", {\n      ref: this.todoRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, todos.map((item, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, item))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  todos: state.todos\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addNewTodo: todo => dispatch({\n    type: 'ADD TODO',\n    todo\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);","map":{"version":3,"sources":["D:/Downloads/Sanbercode/ReactJS/Final Project/src/Body.js"],"names":["React","connect","Body","Component","todoRef","createRef","_handleNewTodo","e","newTodo","current","value","props","addNewTodo","preventDefault","render","todos","map","item","index","mapStateToProps","state","mapDispatchToProps","dispatch","todo","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAN,SAAmBF,KAAK,CAACG,SAAzB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,OAD8B,GACpBJ,KAAK,CAACK,SAAN,EADoB;;AAAA,SAG9BC,cAH8B,GAGZC,CAAD,IAAM;AACnB;AACA,UAAIC,OAAO,GAAG,KAAKJ,OAAL,CAAaK,OAAb,CAAqBC,KAAnC;AACA,WAAKC,KAAL,CAAWC,UAAX,CAAsBJ,OAAtB,EAHmB,CAInB;AACA;;AAEAD,MAAAA,CAAC,CAACM,cAAF;AACA,WAAKT,OAAL,CAAaK,OAAb,CAAqBC,KAArB,GAA6B,EAA7B;AACH,KAZ6B;AAAA;;AAc9BI,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKJ,KAAvB;AACA,WACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAM,MAAA,QAAQ,EAAE,KAAKL,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgB;AAAO,MAAA,GAAG,EAAE,KAAKF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,CADA,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCW,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,IAAjB,CAA3B,CADD,CALJ,CADA;AAWH;;AA3B6B;;AA8B9B,MAAME,eAAe,GAAGC,KAAK,KAAK;AAClCL,EAAAA,KAAK,EAAEK,KAAK,CAACL;AADqB,CAAL,CAA7B;;AAIA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACxCV,EAAAA,UAAU,EAAEW,IAAI,IAAID,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAE,UAAP;AAAmBD,IAAAA;AAAnB,GAAD;AADY,CAAL,CAAnC;;AAIJ,eAAetB,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,IAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Body extends React.Component{\r\n    todoRef = React.createRef();\r\n\r\n    _handleNewTodo = (e) =>{\r\n        // let todoClone = [...this.state.todo];\r\n        let newTodo = this.todoRef.current.value;\r\n        this.props.addNewTodo(newTodo);\r\n        // todoClone.push(newTodo);\r\n        // this.setState({todo: todoClone});\r\n\r\n        e.preventDefault();\r\n        this.todoRef.current.value = '';\r\n    };\r\n\r\n    render(){\r\n        const { todos } = this.props;\r\n        return (\r\n        <div className=\"App App-header\">\r\n            <div>Todo List</div>\r\n            <form onSubmit={this._handleNewTodo}>\r\n            <label>New Todo <input ref={this.todoRef} /></label>\r\n            </form>\r\n            <ul>\r\n            {todos.map((item, index) => <li key={index}>{item}</li>)}\r\n            </ul>\r\n        </div>\r\n        );\r\n    }\r\n    }\r\n\r\n    const mapStateToProps = state => ({\r\n    todos: state.todos\r\n    })\r\n\r\n    const mapDispatchToProps = dispatch => ({\r\n    addNewTodo: todo => dispatch({type: 'ADD TODO', todo})\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);"]},"metadata":{},"sourceType":"module"}